// Comprehensive test based on LANGUAGE_SPEC.zen
// Testing key features that should work with current implementation

// Simple struct
Point: {
    x: f64,
    y: f64,
}

// Enum type (sum type) 
Shape: Circle | Rectangle

main = () void {
    // ============= Variable Declarations =============
    // Immutable declarations with = (no keywords!)
    x = 42
    y = 10.5
    name = "Zen"
    
    // Mutable declaration with ::=
    counter ::= 0
    counter = counter + 1
    
    // Explicit type annotations
    age: i32 = 25
    height: f64 = 5.9
    
    // ============= Struct Creation =============
    origin = Point { x: 0.0, y: 0.0 }
    position = Point { x: 10.0, y: 20.0 }
    
    // ============= Pattern Matching with ? =============
    is_ready = true
    is_ready ? {
        counter = counter + 1
    }
    
    // Boolean pattern with if-else style
    has_data = false
    has_data ?
        | true { counter = counter + 10 }
        | false { counter = counter + 1 }
    
    // ============= Loops =============
    // Infinite loop with break
    iterations ::= 0
    loop(() {
        iterations = iterations + 1
        iterations > 3 ?
            | true { break }
            | false { }
    })
    
    // Range iteration
    (0..5).loop((i) {
        counter = counter + 1
    })
}