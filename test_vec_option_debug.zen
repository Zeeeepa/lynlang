// Debug test for Vec<Option<i32>, size>
{ io, Option } = @std

main = () void {
    io.println("Testing regular Option pattern match first")
    
    opt_test = Option.Some(42)
    opt_test ?
        | Some(val) { io.println("Regular option: Some(${val})") }
        | None { io.println("Regular option: None") }
    
    io.println("\nNow testing Vec<Option<i32>, 3>")
    
    vec = Vec<Option<i32>, 3>()
    io.println("Vec created")
    
    io.println("Pushing Option.Some(100)")
    vec.push(Option.Some(100))
    io.println("First push done")
    
    io.println("Getting element 0")
    opt1: Option<i32> = vec.get(0)
    io.println("Got element 0")
    
    io.println("Pattern matching element 0...")
    opt1 ?
        | Some(val) { 
            io.println("opt1 = Some(${val})")
        }
        | None { 
            io.println("opt1 = None")
        }
    
    io.println("Test complete")
}