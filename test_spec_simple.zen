// Test file to verify LANGUAGE_SPEC.zen features are working

// Test destructuring imports from @std
{ io } = @std

// Test := operator for immutable assignment  
message := "Hello, Zen!"

// Test ::= operator for mutable assignment
counter ::= 0

// Test pattern matching with ? operator
is_ready := true
is_ready ? {
    io.println("System is ready!")
}

// Test Option type (no null!)
maybe_value: Option<i32> = .Some(42)
maybe_value ?
    | .Some(val) { io.println("Value: ${val}") }
    | .None { io.println("No value") }

// Test loop() with closure
counter = 0
loop(() {
    counter = counter + 1
    counter > 3 ?
        | true { break }
        | false { io.println("Count: ${counter}") }
})

// Test range with .loop()
(0..3).loop((i) {
    io.println("Range value: ${i}")
})

main = () void {
    io.println(message)
}