#!/usr/bin/env bash
# zen-check - Syntax validation tool for Zen language files
# Usage: zen-check <file.zen>

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if file argument is provided
if [ $# -eq 0 ]; then
    echo "Usage: zen-check <file.zen>"
    exit 1
fi

FILE="$1"

# Check if file exists
if [ ! -f "$FILE" ]; then
    echo -e "${RED}Error: File '$FILE' not found${NC}"
    exit 1
fi

# Check if it's a .zen file
if [[ ! "$FILE" == *.zen ]]; then
    echo -e "${YELLOW}Warning: File does not have .zen extension${NC}"
fi

# Get the directory of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/.." && pwd )"

# Build the zen compiler if needed
if [ ! -f "$PROJECT_ROOT/target/debug/zen" ]; then
    echo -e "${YELLOW}Building Zen compiler...${NC}"
    (cd "$PROJECT_ROOT" && cargo build --quiet)
fi

# Run the syntax check
echo -e "${GREEN}Checking: $FILE${NC}"
OUTPUT=$("$PROJECT_ROOT/target/debug/zen" --check "$FILE" 2>&1) || {
    EXIT_CODE=$?
    echo -e "${RED}Syntax errors found:${NC}"
    echo "$OUTPUT"
    exit $EXIT_CODE
}

echo -e "${GREEN}âœ“ Syntax is valid${NC}"

# Check for import placement
if grep -q '@import\|comptime.*import\|fn.*import' "$FILE"; then
    # More detailed import checking
    if grep -q 'comptime.*import' "$FILE"; then
        echo -e "${YELLOW}Warning: Imports inside comptime blocks are not allowed${NC}"
        grep -n 'comptime.*import' "$FILE" | while read -r line; do
            echo "  Line $line"
        done
    fi
    
    if grep -q 'fn.*{.*import' "$FILE"; then
        echo -e "${YELLOW}Warning: Imports inside functions are not allowed${NC}"
        grep -n 'fn.*{.*import' "$FILE" | while read -r line; do
            echo "  Line $line"
        done
    fi
fi

# Check for common syntax patterns
echo ""
echo "File statistics:"
echo "  Lines: $(wc -l < "$FILE")"
echo "  Functions: $(grep -c '^[[:space:]]*\(fn\|.*=.*fn\)' "$FILE" || echo "0")"
echo "  Structs: $(grep -c '^[[:space:]]*struct' "$FILE" || echo "0")"
echo "  Imports: $(grep -c ':= @std\.' "$FILE" || echo "0")"