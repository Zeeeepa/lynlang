// Build script for the full_demo project
// This script is executed at compile time

io = @std
build = @std

@comptime {
    // Set build configuration
    project_name = "full_demo"
    version = "0.1.0"
    target = "native"
    entry_point = "main.zen"
    
    // Configure features based on target
    features = target ?
        | "native" { ["std", "concurrency", "ffi"] }
        | "wasm" { ["std"] }
        | _ { ["std"] }
    
    // Generate build metadata
    build_timestamp = build.timestamp()
    git_hash = build.git_hash()
    
    // Export build information
    build.export("BUILD_INFO", {
        name: project_name,
        version: version,
        timestamp: build_timestamp,
        git_hash: git_hash,
        features: features,
    })
    
    // Custom build steps
    build.add_step("generate_bindings", () void {
        // Generate FFI bindings
        build.exec("./scripts/generate_ffi.sh")
    })
    
    build.add_step("test", () void {
        // Run tests before building
        build.exec("zen test")
    })
}

// Runtime build information display
demonstrate_build = (a: Allocator) string {
    // Access compile-time generated build info
    info = build.get_info()
    
    result ::= "Build Info:\n"
    result = result + "    Name: " + info.name + "\n"
    result = result + "    Version: " + info.version + "\n"
    result = result + "    Timestamp: " + info.timestamp + "\n"
    result = result + "    Git Hash: " + info.git_hash + "\n"
    result = result + "    Features: " + info.features.join(", ")
    
    result
}

// Export the main demo function
show_build_info = () void {
    result = demonstrate_build()
    io.println(result)
}