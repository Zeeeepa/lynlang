// Test inline construction of nested generics
{ io, Result, Option } = @std

main = () void {
    io.println("Test 1: Inline double nesting")
    // Result<Result<i32, string>, string>
    double = Result.Ok(Result.Ok(42))
    double ?
        | Result.Ok(inner) {
            inner ?
                | Result.Ok(v) { io.println("  Double nested: ${v}") }
                | Result.Err(e) { io.println("  Inner error: ${e}") }
        }
        | Result.Err(e) { io.println("  Outer error: ${e}") }
    
    io.println("\nTest 2: Inline triple nesting")
    // Option<Result<Option<i32>, string>>
    triple = Option.Some(Result.Ok(Option.Some(999)))
    triple ?
        | Option.Some(res) {
            res ?
                | Result.Ok(opt) {
                    opt ?
                        | Option.Some(v) { io.println("  Triple nested: ${v}") }
                        | Option.None { io.println("  Inner None") }
                }
                | Result.Err(e) { io.println("  Middle error: ${e}") }
        }
        | Option.None { io.println("  Outer None") }
}