// Debug nested raise issue
{ io, Result } = @std

// Function that returns Result<Result<i32, string>, string>
get_nested = () Result<Result<i32, string>, string> {
    inner = Result.Ok(42)
    Result.Ok(inner)
}

// Test with raise
test_raise = () Result<i32, string> {
    // Try the first raise (should extract inner Result from outer Result)
    inner_result = get_nested().raise()
    io.println("Got past first raise")
    
    // Try the second raise (should extract i32 from inner Result)
    value = inner_result.raise()
    io.println("Got past second raise, value: ${value}")
    
    Result.Ok(value + 10)
}

// Simple test
main = () void {
    io.println("Testing raise...")
    result = test_raise()
    result ? | Result.Ok(v) => io.println("Final value: ${v}")
            | Result.Err(e) => io.println("Error: ${e}")
}