// Working loop features test
{ io } = @std

main = () void {
    io.println("Testing Working Loop Features")
    io.println("=============================")
    
    // Test 1: Basic infinite loop with break
    io.println("\n1. Infinite loop with break:")
    counter ::= 0
    loop(() {
        io.print("  Loop iteration ")
        io.print_int(counter)
        io.println("")
        counter = counter + 1
        
        // Simple break condition
        counter > 3 ? { break }
    })
    
    // Test 2: Range loop (0..10)
    io.println("\n2. Range loop (0..5):")
    (0..5).loop((i) {
        io.print("  i = ")
        io.print_int(i)
        io.println("")
    })
    
    // Test 3: Range loop with calculations
    io.println("\n3. Range loop with sum calculation:")
    sum ::= 0
    (1..6).loop((n) {
        sum = sum + n
    })
    io.print("  Sum of 1..5 = ")
    io.print_int(sum)
    io.println(" (expected: 15)")
    
    // Test 4: Nested loops
    io.println("\n4. Nested loops (multiplication table):")
    (1..4).loop((i) {
        (1..4).loop((j) {
            product = i * j
            io.print_int(product)
            io.print(" ")
        })
        io.println("")
    })
    
    // Test 5: Inclusive range
    io.println("\n5. Inclusive range (0..=3):")
    (0..=3).loop((x) {
        io.print("  x = ")
        io.print_int(x)
        io.println("")
    })
    
    io.println("\nâœ… All working loop tests completed!")
}