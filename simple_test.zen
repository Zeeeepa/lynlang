// Simple test program for Zen compiler

extern printf = (format: *i8, ...) i32

// Test basic arithmetic
test_arithmetic = () i32 {
    a := 10
    b := 20
    c := a + b
    
    c == 30 ?
        | true => {
            printf("PASS: arithmetic test\n")
            return 1
        }
        | false => {
            printf("FAIL: arithmetic test\n")
            return 0
        }
}

// Test fibonacci
fibonacci = (n: i32) i32 {
    n <= 1 ?
        | true => n
        | false => fibonacci(n - 1) + fibonacci(n - 2)
}

test_fibonacci = () i32 {
    result := fibonacci(10)
    expected := 55
    
    result == expected ?
        | true => {
            printf("PASS: fibonacci test\n")
            return 1
        }
        | false => {
            printf("FAIL: fibonacci test\n")
            return 0
        }
}

// Main function
main = () i32 {
    printf("=== Running Zen Tests ===\n")
    
    passed := 0
    failed := 0
    
    // Run tests
    result1 := test_arithmetic()
    result1 == 1 ? | true => { passed = passed + 1 } | false => { failed = failed + 1 }
    
    result2 := test_fibonacci()
    result2 == 1 ? | true => { passed = passed + 1 } | false => { failed = failed + 1 }
    
    printf("\n=== Test Results ===\n")
    printf("Tests passed: %d\n", passed)
    printf("Tests failed: %d\n", failed)
    
    failed > 0 ?
        | true => 1
        | false => 0
}