// Comprehensive test for StaticString.trim() method
{ io , get_default_allocator} = @std

main = () i32 {
    alloc = get_default_allocator()
    io.println("═══════════════════════════════════════")
    io.println("    StaticString.trim() Comprehensive Test   ")
    io.println("═══════════════════════════════════════")
    
    // Test 1: Basic trim with spaces
    s1 = "  hello  "
    t1 = s1.trim()
    io.println("")
    io.println("Test 1: Basic spaces")
    io.println("  Input:  '${s1}'")
    io.println("  Output: '${t1}'")
    t1 == "hello" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'hello'") }
    
    // Test 2: Tabs and spaces
    s2 = "	world 	"
    t2 = s2.trim()
    io.println("")
    io.println("Test 2: Tabs and spaces")
    io.println("  Input:  '${s2}'")
    io.println("  Output: '${t2}'")
    t2 == "world" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'world'") }
    
    // Test 3: Newlines
    s3 = "
test
"
    t3 = s3.trim()
    io.println("")
    io.println("Test 3: Newlines")
    io.println("  Input has newlines before and after 'test'")
    io.println("  Output: '${t3}'")
    t3 == "test" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'test'") }
    
    // Test 4: No whitespace
    s4 = "already_trimmed"
    t4 = s4.trim()
    io.println("")
    io.println("Test 4: No whitespace to trim")
    io.println("  Input:  '${s4}'")
    io.println("  Output: '${t4}'")
    t4 == "already_trimmed" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'already_trimmed'") }
    
    // Test 5: Only whitespace
    s5 = "   	  "
    t5 = s5.trim()
    io.println("")
    io.println("Test 5: Only whitespace")
    io.println("  Input:  '${s5}' (spaces and tabs)")
    io.println("  Output: '${t5}'")
    t5 == "" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected empty StaticString") }
    
    // Test 6: Empty StaticString
    s6 = ""
    t6 = s6.trim()
    io.println("")
    io.println("Test 6: Empty StaticString")
    io.println("  Input:  '${s6}'")
    io.println("  Output: '${t6}'")
    t6 == "" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected empty StaticString") }
    
    // Test 7: Mixed whitespace
    s7 = " 	
 Zen Language 
	 "
    t7 = s7.trim()
    io.println("")
    io.println("Test 7: Mixed whitespace (spaces, tabs, newlines)")
    io.println("  Input has mixed whitespace around 'Zen Language'")
    io.println("  Output: '${t7}'")
    t7 == "Zen Language" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'Zen Language'") }
    
    // Test 8: Internal whitespace preserved
    s8 = "  keep  internal  spaces  "
    t8 = s8.trim()
    io.println("")
    io.println("Test 8: Internal whitespace preserved")
    io.println("  Input:  '${s8}'")
    io.println("  Output: '${t8}'")
    t8 == "keep  internal  spaces" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'keep  internal  spaces'") }
    
    // Test 9: Single character
    s9 = " x "
    t9 = s9.trim()
    io.println("")
    io.println("Test 9: Single character")
    io.println("  Input:  '${s9}'")
    io.println("  Output: '${t9}'")
    t9 == "x" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'x'") }
    
    // Test 10: Leading whitespace only
    s10 = "   no_trailing"
    t10 = s10.trim()
    io.println("")
    io.println("Test 10: Leading whitespace only")
    io.println("  Input:  '${s10}'")
    io.println("  Output: '${t10}'")
    t10 == "no_trailing" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'no_trailing'") }
    
    // Test 11: Trailing whitespace only
    s11 = "no_leading   "
    t11 = s11.trim()
    io.println("")
    io.println("Test 11: Trailing whitespace only")
    io.println("  Input:  '${s11}'")
    io.println("  Output: '${t11}'")
    t11 == "no_leading" ?
        | true { io.println("  ✓ PASS") }
        | false { io.println("  ✗ FAIL: Expected 'no_leading'") }
    
    io.println("")
    io.println("═══════════════════════════════════════")
    io.println("         All tests completed!          ")
    io.println("═══════════════════════════════════════")
    
    return 0
}