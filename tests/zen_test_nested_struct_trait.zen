// Test nested struct with trait implementation
{ io, math } = @std

// Trait definition
Geometric: {
    area: (self) f64,
}

// Point struct
Point: {
    x: f64,
    y: f64,
}

// Circle with nested Point
Circle: {
    center: Point,
    radius: f64,
}

// Implement trait for Circle
Circle.implements(Geometric, {
    area = (self) f64 {
        io.println("Calculating area for radius: ${self.radius}")
        return math.pi * self.radius * self.radius
    },
})

main = () void {
    io.println("Testing nested struct with trait:")
    
    center = Point { x: 0.0, y: 0.0 }
    circle = Circle { center: center, radius: 5.0 }
    
    io.println("Circle center: (${circle.center.x}, ${circle.center.y})")
    io.println("Circle radius: ${circle.radius}")
    
    area = circle.area()
    io.println("Circle area: ${area}")
}