// Test closure type storage and retrieval
{ io, Result } = @std

main = () i32 {
    // Define a closure that returns Result<i32, StaticString>
    get_val = () Result<i32, StaticString> {
        return Result.Ok(42)
    }
    
    // Call it and use raise - this works
    v1 = get_val().raise()
    io.print_int(v1)
    io.println("")
    
    // Now test comparison - this should also work
    v1 == 42 ?
        | true { io.println("v1 == 42: OK") }
        | false { io.println("v1 == 42: FAILED") }
    
    // Test with parameters
    add_one = (x: i32) Result<i32, StaticString> {
        return Result.Ok(x + 1)
    }
    
    v2 = add_one(10).raise()
    io.print_int(v2)
    io.println("")
    
    v2 == 11 ?
        | true { io.println("v2 == 11: OK") }
        | false { io.println("v2 == 11: FAILED") }
    
    return 0
}