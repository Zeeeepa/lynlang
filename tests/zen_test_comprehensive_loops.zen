// Comprehensive test of loop features from LANGUAGE_SPEC.zen
{ io } = @std

main = () void {
    io.println("Testing Loop Features from LANGUAGE_SPEC.zen")
    io.println("=============================================")
    
    // Test 1: Basic infinite loop with break
    io.println("\n1. Infinite loop with break:")
    counter ::= 0
    loop(() {
        io.print("  Loop iteration ")
        io.print_int(counter)
        io.println("")
        counter = counter + 1
        counter > 3 ? { break }
    })
    
    // Test 2: Range loop (0..10)
    io.println("\n2. Range loop (0..5):")
    (0..5).loop((i) {
        io.print("  i = ")
        io.print_int(i)
        io.println("")
    })
    
    // Test 3: Range loop with calculations
    io.println("\n3. Range loop with sum calculation:")
    sum ::= 0
    (1..6).loop((n) {
        sum = sum + n
    })
    io.print("  Sum of 1..5 = ")
    io.print_int(sum)
    io.println("")
    
    // Test 4: Nested loops
    io.println("\n4. Nested loops:")
    (0..3).loop((i) {
        (0..3).loop((j) {
            io.print("  (")
            io.print_int(i)
            io.print(", ")
            io.print_int(j)
            io.print(") ")
        })
        io.println("")
    })
    
    // Test 5: Loop with pattern matching inside
    io.println("\n5. Loop with pattern matching:")
    (0..5).loop((x) {
        x ?
            | 0 { io.println("  Zero") }
            | 1 { io.println("  One") }
            | 2 { io.println("  Two") }
            | _ { 
                io.print("  Other: ")
                io.print_int(x)
                io.println("")
            }
    })
    
    // Test 6: Break in nested context
    io.println("\n6. Break in complex context:")
    count ::= 0
    loop(() {
        count = count + 1
        io.print("  Iteration ")
        io.print_int(count)
        
        count > 5 ?
            | true {
                io.println(" - breaking!")
                break
            }
            | false {
                io.println(" - continuing...")
            }
    })
    
    io.println("\nâœ… All loop tests completed!")
}