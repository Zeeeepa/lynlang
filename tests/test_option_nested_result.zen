// Test nested generics: Option<Result<T, E>>
{ io, Result, Option , get_default_allocator} = @std

test_function = () Option<Result<i32, StaticString>> {
    // Return Some with Ok value
    return Option.Some(Result.Ok(99))
}

main = () void {
    alloc = get_default_allocator()
    io.println("Testing Option<Result<i32, StaticString>>")
    
    opt = test_function()
    
    opt ?
        | Some(res) {
            res ?
                | Ok(val) { io.println("Got value: ${val}") }
                | Err(msg) { io.println("Error: ${msg}") }
        }
        | None {
            io.println("Got None")
        }
}
