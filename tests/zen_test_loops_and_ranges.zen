// Loop and range tests from LANGUAGE_SPEC.zen lines 431-459
// Tests all loop forms and range syntax

{ io } = @std

main = () void {
    // Range iteration (lines 431-434)
    (0..10).loop((i) {
        io.println("Count: ${i}")
    })
    
    // Step ranges (lines 436-439)
    (0..100).step(10).loop((i) {
        io.println("Step: ${i}")  // 0, 10, 20, ...
    })
    
    // Collection loop with UFC (lines 441-445)
    numbers = [1, 2, 3, 4, 5]
    total ::= 0
    numbers.loop((n) {
        total = total + n
    })
    
    // Loop with index (lines 447-450)
    items = ["a", "b", "c"]
    items.loop((item, i) {
        io.println("Item ${i}: ${item}")
    })
    
    // Infinite loop with break (lines 452-459)
    counter ::= 0
    loop(() {
        counter = counter + 1
        counter > 10 ?
            | true { break }
            | false { io.println("Count: ${counter}") }
    })
    
    // While-like pattern with loop
    running ::= true
    loop(() {
        running ?
            | false { break }
            | true {
                // Do work
                running = false  // Eventually stop
            }
    })
    
    // For-each style with early exit
    values = [1, 2, 3, 4, 5]
    found ::= false
    values.loop((v) {
        v == 3 ?
            | true {
                found = true
                break
            }
            | false {}
    })
}