// Loop and range tests from LANGUAGE_SPEC.zen lines 431-459
// Tests all loop forms and range syntax

{ io } = @std

main = () i32 {
    // Range iteration (lines 431-434)
    (0..10).loop((i) {
        io.println("Count: ${i}")
    })
    
    // Step ranges - not yet implemented
    // (0..100).step(10).loop((i) {
    //     io.println("Step: ${i}")  // 0, 10, 20, ...
    // })
    
    // Collection loop - arrays not yet implemented
    // numbers = [1, 2, 3, 4, 5]
    // total ::= 0
    // numbers.loop((n) {
    //     total = total + n
    // })
    
    // Loop with index - arrays not yet implemented
    // items = ["a", "b", "c"]
    // items.loop((item, i) {
    //     io.println("Item ${i}: ${item}")
    // })
    
    // Infinite loop with break (lines 452-459)
    counter ::= 0
    loop {
        counter = counter + 1
        counter > 10 ?
            | true { break }
            | false { io.println("Count: ${counter}") }
    }
    
    // While-like pattern with loop - simplified
    running ::= true
    running ?
        | true { io.println("Loop would run") }
        | false { io.println("Loop would not run") }
    
    return 0
}