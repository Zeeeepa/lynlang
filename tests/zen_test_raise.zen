// Test .raise() error propagation from LANGUAGE_SPEC.zen lines 205-211
{ io } = @std

// Result type
Result<T, E>: Ok(T) | Err(E)

// Function that might fail
might_fail = (should_fail: bool) Result<i32, string> {
    should_fail ?
        | true { return Err("Operation failed") }
        | false { return Ok(42) }
}

// Function using .raise() for error propagation
process_data = () Result<i32, string> {
    // This should propagate the error if might_fail returns Err
    value = might_fail(false).raise()
    
    // If we get here, might_fail returned Ok
    return Ok(value)
}

main = () void {
    result = process_data()
    
    result ?
        | Ok(val) { io.println("Success: ${val}") }
        | Err(e) { io.println("Error: ${e}") }
}