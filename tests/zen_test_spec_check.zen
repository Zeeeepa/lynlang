// Test file to check LANGUAGE_SPEC.zen features implementation
{ io } = @std

main = () void {
    // Test variable declarations (all 6 forms from spec)
    x: i32
    x = 10
    y = 20
    z: i32 = 30
    w:: i32
    w = 40
    v ::= 50
    u:: i32 = 60
    
    io.println("Variables test:")
    io.println(x)
    io.println(y)
    io.println(z)
    io.println(w)
    io.println(v)
    io.println(u)
    
    // Test boolean pattern matching
    is_ready = true
    is_ready ? {
        io.println("Ready!")
    }
    
    // Test full pattern matching
    has_data = false
    has_data ?
        | true { io.println("Has data") }
        | false { io.println("No data") }
    
    // Test Option type
    maybe: Option<i32> = Some(42)
    maybe ?
        | Some(val) { io.println(val) }
        | None { io.println("Empty") }
    
    // Test Result type
    result: Result<i32, string> = Ok(100)
    result ?
        | Ok(val) { io.println(val) }
        | Err(msg) { io.println(msg) }
    
    // Test range iteration
    io.println("Range test:")
    (0..5).loop((i) {
        io.println(i)
    })
    
    // Test defer
    @this.defer(io.println("Cleanup done!"))
    
    io.println("Main done")
}