// Test enum definitions from LANGUAGE_SPEC.zen - with explicit enum names

// Game entity enum from spec
GameEntity: .Player | .Enemy | .Powerup

// Simple enum without payloads
FileMode: .ReadOnly | .WriteOnly | .ReadWrite | .Append | .CreateNew

// IO Error types from spec
IOError: .FileNotFound
    | .PermissionDenied
    | .AlreadyExists
    | .BrokenPipe
    | .UnexpectedEof
    | .InvalidInput
    | .WriteZero
    | .ReadError
    | .WriteError
    | .Other

// Import io for testing
{ io } = @std

// Test basic enum usage with explicit enum names
main = () void {
    io.println("Testing enum definitions from LANGUAGE_SPEC.zen")
    
    // Test with explicit enum name syntax
    entity = GameEntity.Player
    io.println("Created GameEntity.Player")
    
    // Test FileMode enum
    mode = FileMode.ReadOnly  
    io.println("Created FileMode.ReadOnly")
    
    // Test IOError enum
    error = IOError.FileNotFound
    io.println("Created IOError.FileNotFound")
    
    io.println("Basic enum creation works!")
}