// Test UFC (Uniform Function Call) feature
// Any function can be called as method: object.function(args) -> function(object, args)

io = @std

// Define a simple struct
Point: {
    x: i32,
    y: i32,
}

// Define functions that can be used with UFC
distance = (p: Point) i32 {
    return p.x * p.x + p.y * p.y
}

scale = (p: Point, factor: i32) Point {
    return Point { 
        x: p.x * factor, 
        y: p.y * factor 
    }
}

main = () void {
    p = Point { x: 3, y: 4 }
    
    // Test UFC - calling function as method
    d = p.distance()  // Should become distance(p)
    io.println("Distance squared: ${d}")
    
    // Test UFC with additional arguments
    scaled = p.scale(2)  // Should become scale(p, 2)
    io.println("Scaled point: (${scaled.x}, ${scaled.y})")
    
    // Test pointer operations
    ptr: Ptr<Point> = p.ref()
    io.println("Pointer address: ${ptr.addr}")
    
    deref_point = ptr.val
    io.println("Dereferenced x: ${deref_point.x}")
}