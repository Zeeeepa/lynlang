// Test nested Result<Result<T,E>,E> with raise() - currently broken
// Issue: Inline construction of nested Results loses inner payload values
{ io, Result , get_default_allocator} = @std

// Helper function that returns Result<Result<i32, string>, string>
get_nested_result = () Result<Result<i32, string>, string> {
    Result.Ok(Result.Ok(42))
}

main = () void {
    alloc = get_default_allocator()
    io.println("Testing nested Result with raise()")
    
    // This should work but returns 0 instead of 42
    result = get_nested_result()
    inner = result.raise()  // Should extract Result<i32, string>
    value = inner.raise()    // Should extract 42
    
    io.println("Expected: 42")
    io.println("Got: ${value}")
    
    value == 42 ?
        | true { io.println("✓ Test passed") }
        | false { io.println("✗ Test failed: got ${value} instead of 42") }
}