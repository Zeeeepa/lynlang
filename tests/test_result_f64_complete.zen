// Complete test for Result<f64, string>
{ io, Result } = @std

calculate_area = (radius: f64) Result<f64, string> {
    radius < 0.0 ?
        | true { return Result.Err("Radius cannot be negative") }
        | false { }
    
    pi = 3.14159
    area = pi * radius * radius
    return Result.Ok(area)
}

test_area = () Result<f64, string> {
    // Test with valid radius
    r1 = calculate_area(5.0)
    area1 = r1.raise()
    
    io.println("Area of circle with radius 5.0: ${area1}")
    
    // Double it
    doubled = area1 * 2.0
    io.println("Doubled area: ${doubled}")
    
    return Result.Ok(doubled)
}

main = () i32 {
    result = test_area()
    result ?
        | Result.Ok(v) { 
            io.println("Final value: ${v}")
            return 0
        }
        | Result.Err(e) { 
            io.println("Error: ${e}")
            return 1
        }
}