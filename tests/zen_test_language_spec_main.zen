// Main test directly from LANGUAGE_SPEC.zen
// Testing core working features

{ io, math } = @std

// Option type from L109-110
Option<T>: Some(T) | None

// Result type from L112-113  
Result<T, E>: Ok(T) | Err(E)

// Simple struct from L117-120
Point: {
    x:: f64,
    y:: f64 = 0
}

main = () void {
    io.println("=== Testing LANGUAGE_SPEC.zen Core Features ===")
    
    // Variables from L298-306
    x: i32
    x = 10
    y = 20
    z: i32 = 30
    w:: i32
    w = 40
    v ::= 50
    u:: i32 = 60
    
    io.println("Variables: x=${x}, y=${y}, z=${z}")
    io.println("Mutable vars: w=${w}, v=${v}, u=${u}")
    
    // Pattern matching from L352-361
    is_ready = true
    is_ready ? {
        io.println("Starting game!")
    }
    
    has_data = false
    has_data ?
        | true { io.println("Processing data") }
        | false { io.println("Waiting for data...") }
    
    // Range iteration from L432-435
    io.println("Range loop:")
    (0..5).loop((i) {
        io.println("Count: ${i}")
    })
    
    // Infinite loop with break from L453-459
    counter ::= 0
    loop(() {
        counter = counter + 1
        counter > 3 ?
            | true { break }
            | false { io.println("Loop: ${counter}") }
    })
    
    // Option handling from L462-473
    maybe_radius: Option<f64> = Some(5.5)
    maybe_radius ?
        | Some(r) { io.println("Radius: ${r}") }
        | None { io.println("No radius") }
    
    // Defer from L217
    @this.defer(io.println("Cleanup complete!"))
    
    io.println("Main function ending...")
}