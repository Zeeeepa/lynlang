// Trace the type issue more carefully
{ io, Result } = @std

main = () i32 {
    divide = (a: f64, b: f64) Result<f64, string> {
        result = b == 0.0 ?
            | true { Result.Err("Division by zero") }
            | false { Result.Ok(a / b) }
        return result
    }
    
    // Call divide and raise
    val = divide(10.0, 2.0).raise()
    io.println("val = ${val}")
    
    // First store the comparison result
    is_five = val == 5.0
    io.println("is_five = ${is_five}")
    
    // Then use it
    is_five ?
        | true { io.println("Success!") }
        | false { io.println("Failed") }
    
    return 0
}