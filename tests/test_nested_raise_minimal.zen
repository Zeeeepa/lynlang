// Minimal test for nested Result with raise()
{ io, Result } = @std

// Returns Result<Result<i32, string>, string>
get_nested = () Result<Result<i32, string>, string> {
    Result.Ok(Result.Ok(42))
}

// Extract using double raise
extract = () Result<i32, string> {
    inner = get_nested().raise()  // Should get Result<i32, string>
    value = inner.raise()         // Should get i32 value 42
    Result.Ok(value + 100)        // Should return 142
}

main = () i32 {
    result = extract()
    result ? | Result.Ok(v) => {
        io.println("Value: ${v}")
        v == 142 ? | true => 0 | false => 1  
    } | Result.Err(e) => {
        io.println("Error: ${e}")
        2
    }
}