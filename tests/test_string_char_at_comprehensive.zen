// Comprehensive test for string.char_at() method
{ io } = @std

main = () i32 {
    // Test with ASCII string
    hello ::= "Hello, World!"
    
    // Test first character
    h ::= hello.char_at(0)
    io.println("char_at(0) 'H': ${h}")  // Should be 72
    h == 72 ?
        | true { }
        | false { return 1 }
    
    // Test middle character
    comma ::= hello.char_at(5)
    io.println("char_at(5) ',': ${comma}")  // Should be 44
    comma == 44 ?
        | true { }
        | false { return 2 }
    
    // Test space character
    space ::= hello.char_at(6)
    io.println("char_at(6) ' ': ${space}")  // Should be 32
    space == 32 ?
        | true { }
        | false { return 3 }
    
    // Test last character
    exclaim ::= hello.char_at(12)
    io.println("char_at(12) '!': ${exclaim}")  // Should be 33
    exclaim == 33 ?
        | true { }
        | false { return 4 }
    
    // Test with string literal directly
    a_char ::= "ABC".char_at(0)
    io.println("'ABC'[0] 'A': ${a_char}")  // Should be 65
    a_char == 65 ?
        | true { }
        | false { return 5 }
    
    b_char ::= "ABC".char_at(1)
    io.println("'ABC'[1] 'B': ${b_char}")  // Should be 66
    b_char == 66 ?
        | true { }
        | false { return 6 }
    
    // Test with numbers in string
    nums ::= "0123456789"
    zero ::= nums.char_at(0)
    io.println("'0': ${zero}")  // Should be 48
    zero == 48 ?
        | true { }
        | false { return 7 }
    
    nine ::= nums.char_at(9)
    io.println("'9': ${nine}")  // Should be 57
    nine == 57 ?
        | true { }
        | false { return 8 }
    
    // Test with special characters
    special ::= "!@#$%"
    at ::= special.char_at(1)
    io.println("'@': ${at}")  // Should be 64
    at == 64 ?
        | true { }
        | false { return 9 }
    
    // Test with lowercase
    lower ::= "abcxyz"
    x_char ::= lower.char_at(3)
    io.println("'x': ${x_char}")  // Should be 120
    x_char == 120 ?
        | true { }
        | false { return 10 }
    
    // Test with single character string
    single ::= "Z"
    z_char ::= single.char_at(0)
    io.println("'Z': ${z_char}")  // Should be 90
    z_char == 90 ?
        | true { }
        | false { return 11 }
    
    // Test with i32 and i64 indices
    str ::= "Testing"
    idx32 ::= 2  // Use type inference
    idx64 ::= 5  // Use type inference
    
    s_char ::= str.char_at(idx32)
    io.println("char_at(i32:2) 's': ${s_char}")  // Should be 115
    s_char == 115 ?
        | true { }
        | false { return 12 }
    
    n_char ::= str.char_at(idx64)
    io.println("char_at(i64:5) 'n': ${n_char}")  // Should be 110
    n_char == 110 ?
        | true { }
        | false { return 13 }
    
    io.println("All string.char_at() tests passed!")
    return 0
}