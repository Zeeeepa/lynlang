// Test Option and Result types from LANGUAGE_SPEC.zen
{ io } = @std

// Define Option type as per spec
Option<T>: Some(T) | None

// Define Result type as per spec  
Result<T, E>: Ok(T) | Err(E)

main = () void {
    io.println("Testing Option type...")
    
    // Test Some constructor
    some_val = Some(42)
    some_val ?
        | Some(v) { io.println("✓ Some(42) = ${v}") }
        | None { io.println("✗ Expected Some, got None") }
    
    // Test None constructor
    none_val = None
    none_val ?
        | Some(v) { io.println("✗ Expected None, got Some(${v})") }
        | None { io.println("✓ None works") }
    
    io.println("")
    io.println("Testing Result type...")
    
    // Test Ok constructor
    ok_val = Ok(100)
    ok_val ?
        | Ok(v) { io.println("✓ Ok(100) = ${v}") }
        | Err(e) { io.println("✗ Expected Ok, got Err") }
    
    // Test Err constructor
    err_val = Err("error message")
    err_val ?
        | Ok(v) { io.println("✗ Expected Err, got Ok") }
        | Err(e) { io.println("✓ Err works with: ${e}") }
    
    io.println("")
    io.println("All Option and Result tests passed!")
}