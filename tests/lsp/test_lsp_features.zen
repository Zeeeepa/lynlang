// Test file for verifying LSP features

// Test 1: Rename Symbol - rename this function
fn calculate_sum(a: i32, b: i32) i32 {
    return a + b;
}

// Test 2: Signature Help - trigger on opening paren
fn test_signature_help() void {
    let result = calculate_sum(10, 20);
}

// Test 3: Inlay Hints - should show type for x
fn test_inlay_hints() void {
    let x = calculate_sum(5, 15);  // x should show as i32
}

// Test 4: Hover - hover over Result type
fn divide(a: f64, b: f64) Result<f64, StaticString> {
    if b == 0.0 {
        return Result.Err("Division by zero");
    }
    return Result.Ok(a / b);
}

// Test 5: Find References - find all uses of divide
fn test_find_references() void {
    let result1 = divide(10.0, 2.0);
    let result2 = divide(20.0, 4.0);
}

// Test 6: Goto Definition - click on calculate_sum
fn test_goto_definition() void {
    calculate_sum(1, 2);
}

// Test 7: Code Actions - extract this expression
fn test_code_actions() void {
    let value = 42 * 2 + 10;
}
