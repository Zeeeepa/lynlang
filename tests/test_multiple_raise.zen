{io, Result, get_default_allocator} = @std

divide = (a: i32, b: i32) Result<i32, StaticString> {
    b == 0 ?
        | true { Result.Err("Division by zero") }
        | false { Result.Ok(a / b) }
}

safe_add = (a: i32, b: i32) Result<i32, StaticString> {
    sum = a + b
    Result.Ok(sum)
}

main = () void {
    alloc = get_default_allocator()
    io.println("Testing multiple .raise() in closure")
    
    chain_test = () Result<i32, StaticString> {
        a = divide(100, 2).raise()
        b = divide(50, 5).raise()
        c = safe_add(a, b).raise()
        Result.Ok(c)
    }
    
    result = chain_test()
    result ?
        | Result.Ok(v) { io.println("Result: ${v}") }
        | Result.Err(e) { io.println("Error: ${e}") }
}