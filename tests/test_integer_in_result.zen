// Test integers in Result
{ io, Result , get_default_allocator} = @std

test_inline = () void {
    io.println("Testing inline Result with large integers:")
    
    r1 = Result.Ok(314159)
    r1 ?
        | Result.Ok(v) { io.println("  314159: ${v}") }
        | Result.Err(e) { io.println("  Error: ${e}") }
    
    r2 = Result.Ok(1000000)
    r2 ?
        | Result.Ok(v) { io.println("  1000000: ${v}") }
        | Result.Err(e) { io.println("  Error: ${e}") }
}

test_from_function = () void {
    io.println("Testing function-returned Result:")
    
    make_result = () Result<i32, string> { Result.Ok(314159) }
    
    r = make_result()
    r ?
        | Result.Ok(v) { io.println("  314159 from func: ${v}") }
        | Result.Err(e) { io.println("  Error: ${e}") }
}

main = () i32 {
    alloc = get_default_allocator()
    io.println("=== Testing Integers in Result ===")
    test_inline()
    test_from_function()
    0
}