// Test simple nested generic with pattern matching
{ io, Result } = @std

main = () i32 {
    io.println("Testing nested Result with pattern matching")
    
    // Create inner Result
    inner = Result.Ok(42)
    io.println("Created inner: Result.Ok(42)")
    
    // Create outer Result
    outer = Result.Ok(inner)
    io.println("Created outer: Result.Ok(inner)")
    
    // Pattern match on outer
    io.println("Matching outer...")
    outer ?
        | Result.Ok(inner_result) {
            io.println("Outer was Ok, got inner result")
            inner_result ?
                | Result.Ok(val) {
                    io.println("Inner was Ok, value: ${val}")
                }
                | Result.Err(e) {
                    io.println("Inner was Err")
                }
        }
        | Result.Err(e) {
            io.println("Outer was Err")
        }
    
    0
}