// Test storing result of raise in variable
{ io, Result } = @std

// Returns Result<Result<i32, string>, string>
get_nested = () Result<Result<i32, string>, string> {
    Result.Ok(Result.Ok(42))
}

main = () i32 {
    // Use raise to extract inner Result
    inner = get_nested().raise()
    
    // What type is inner?
    // Try pattern matching on it
    inner ?
        | Result.Ok(val) {
            io.println("Value from inner: ${val}")
            val == 42 ? | true => 0 | false => 1
        }
        | Result.Err(e) {
            io.println("Error from inner: ${e}")
            2
        }
}