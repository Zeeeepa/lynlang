// Simplest test of storing Result in variable then nesting
{ io, Result } = @std

main = () i32 {
    // Create inner Result
    inner = Result.Ok(42)
    
    // Test inner directly
    inner ? | Result.Ok(v) => io.println("Inner directly: ${v}")
           | Result.Err(e) => io.println("Inner error: ${e}")
    
    // Create outer with inner variable
    outer = Result.Ok(inner)
    
    // Test outer
    outer ? | Result.Ok(got_inner) => {
        io.println("Got inner from outer")
        got_inner ? | Result.Ok(v) => {
            io.println("Value from nested: ${v}")
            v == 42 ? | true => 0 | false => 1
        } | Result.Err(e) => {
            io.println("Inner error: ${e}")
            2
        }
    } | Result.Err(e) => {
        io.println("Outer error: ${e}")
        3
    }
}