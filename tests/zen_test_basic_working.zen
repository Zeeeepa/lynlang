// Basic test for currently working Zen features
// From LANGUAGE_SPEC.zen

{ io, math } = @std

main = () void {
    io.println("=== Zen Basic Working Features Test ===")
    
    // 1. Variable declarations (spec lines 299-306)
    io.println("\n1. Variables:")
    x: i32
    x = 10
    io.println("x = ${x}")
    
    y = 20
    io.println("y = ${y}")
    
    z: i32 = 30
    io.println("z = ${z}")
    
    w:: i32
    w = 40
    w = 45
    io.println("w (mutable) = ${w}")
    
    v ::= 50
    v = 55
    io.println("v (mutable) = ${v}")
    
    // 2. Pattern matching (spec lines 352-361)
    io.println("\n2. Pattern Matching:")
    is_ready = true
    is_ready ? {
        io.println("Ready!")
    }
    
    has_data = false
    has_data ?
        | true { io.println("Has data") }
        | false { io.println("No data") }
    
    // 3. Ranges (spec lines 432-434)
    io.println("\n3. Ranges:")
    i ::= 0
    loop(() {
        i >= 3 ? {
            break
        }
        io.println("i = ${i}")
        i = i + 1
    })
    
    // 4. Infinite loop with break (spec lines 453-459)
    io.println("\n4. Loop with break:")
    counter ::= 0
    loop(() {
        counter = counter + 1
        io.println("counter = ${counter}")
        counter >= 2 ? {
            break
        }
    })
    
    // 5. Math module (spec line 93)
    io.println("\n5. Math:")
    io.println("pi = ${math.pi}")
    
    // 6. Arithmetic
    io.println("\n6. Arithmetic:")
    a = 10
    b = 3
    io.println("${a} + ${b} = ${a + b}")
    io.println("${a} - ${b} = ${a - b}")
    io.println("${a} * ${b} = ${a * b}")
    io.println("${a} / ${b} = ${a / b}")
    io.println("${a} % ${b} = ${a % b}")
    
    io.println("\n=== Test Complete ===")
}