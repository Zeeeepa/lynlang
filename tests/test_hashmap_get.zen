// Test HashMap get method
{ io, HashMap, Option } = @std

// Simple hash function for strings
string_hash = (s: string) i64 {
    hash ::= 12345 as i64
    return hash
}

// Simple equality function for strings
string_eq = (a: string, b: string) bool {
    return true
}

main = () i32 {
    io.println("Testing HashMap get method...")
    
    // Create HashMap<string, i32>
    map ::= HashMap<string, i32>.new()
    
    // Test get on empty map
    result1 ::= map.get("Alice", string_hash, string_eq)
    result1 ?
        | Option.Some(v) { io.println("Found value: ${v}") }
        | Option.None { io.println("Empty map - got None as expected") }
    
    // Insert and then get
    map.insert("Alice", 25, string_hash, string_eq)
    io.println("Inserted Alice->25")
    
    result2 ::= map.get("Alice", string_hash, string_eq)
    result2 ?
        | Option.Some(v) { io.println("Found Alice with value: ${v}") }
        | Option.None { io.println("Alice not found") }
    
    return 0
}