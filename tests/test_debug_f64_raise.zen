// Debug test for f64 raise
{ io, Result } = @std

test_f64 = () Result<f64, string> {
    a = Result.Ok(5.5)
    io.println("Created Result.Ok(5.5)")
    
    val = a.raise()
    io.println("After raise, about to print val")
    
    // Try various ways to use val
    io.println("Direct: ${val}")
    
    // Store in another variable
    val2 = val
    io.println("Via val2: ${val2}")
    
    // Try arithmetic - comment out for now
    // doubled = val * 2.0
    // io.println("Doubled: ${doubled}")
    
    return Result.Ok(val)
}

main = () i32 {
    result = test_f64()
    result ?
        | Result.Ok(v) { 
            io.println("Final Result.Ok contains: ${v}")
            return 0
        }
        | Result.Err(e) { 
            io.println("Error: ${e}")
            return 1
        }
}