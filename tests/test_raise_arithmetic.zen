// Test .raise() with arithmetic operations
{ io, Result , get_default_allocator} = @std

calculate = () Result<i32, string> {
    a = Result.Ok(10)
    b = Result.Ok(20)
    c = Result.Ok(5)
    
    // Chain multiple .raise() calls
    val_a = a.raise()
    val_b = b.raise()
    val_c = c.raise()
    
    // Do arithmetic with extracted values
    sum = val_a + val_b  // 10 + 20 = 30
    result = sum * val_c  // 30 * 5 = 150
    
    return Result.Ok(result)
}

main = () i32 {
    alloc = get_default_allocator()
    outcome = calculate()
    outcome ?
        | Result.Ok(v) { 
            io.println("Calculation result: ${v}")
            return 0
        }
        | Result.Err(e) { 
            io.println("Error: ${e}")
            return 1
        }
}
