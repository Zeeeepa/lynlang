// Working features from LANGUAGE_SPEC.zen
{ io } = @std

Point: {
    x:: f64,
    y:: f64
}

double = (n: i32) i32 {
    return n * 2
}

main = () void {
    io.println("=== LANGUAGE_SPEC.zen Working Features ===")
    
    // 1. Variables
    x = 10
    y ::= 20
    io.println("Variables: x=${x}, y=${y}")
    y = 25
    io.println("After mutation: y=${y}")
    
    // 2. String interpolation
    name = "Zen"
    io.println("Hello, ${name}!")
    
    // 3. Pattern matching
    ready = true
    ready ? {
        io.println("System ready")
    }
    
    // 4. Structs
    p = Point { x: 1.0, y: 2.0 }
    io.println("Point: (${p.x}, ${p.y})")
    p.x = 3.0
    io.println("After mutation: (${p.x}, ${p.y})")
    
    // 5. UFC
    num = 5
    result = num.double()
    io.println("UFC: ${num}.double() = ${result}")
    
    // 6. Range loops
    io.print("Range: ")
    (0..5).loop((i) {
        io.print("${i} ")
    })
    io.println("")
    
    // 7. Infinite loop with break
    count ::= 0
    loop {
        count = count + 1
        count > 3 ?
            | true { break }
            | false { }
    }
    io.println("Loop stopped at ${count}")
    
    io.println("=== All tests passed ===")
}