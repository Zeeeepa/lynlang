// Simple debug test for nested Result
{ io, Result } = @std

main = () i32 {
    // Create inner Result.Ok(42)
    inner = Result.Ok(42)
    io.println("Created inner: Result.Ok(42)")
    
    // Create outer Result.Ok(inner)
    outer = Result.Ok(inner)
    io.println("Created outer: Result.Ok(inner)")
    
    // Extract inner from outer using pattern matching
    outer ? | Result.Ok(extracted) => {
        io.println("Extracted inner from outer")
        
        // Pattern match on extracted
        extracted ? | Result.Ok(val) => {
            io.println("Value from inner: ${val}")
            val == 42 ? | true => {
                io.println("Success!")
                0
            } | false => {
                io.println("Failed: got ${val} instead of 42")
                1
            }
        } | Result.Err(e) => {
            io.println("Inner was Err: ${e}")
            2
        }
    } | Result.Err(e) => {
        io.println("Outer was Err: ${e}")
        3
    }
}