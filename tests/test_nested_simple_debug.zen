// Debug test for nested generic
{ io, Result } = @std

main = () i32 {
    // Create inner Result.Ok(42)
    inner = Result.Ok(42)
    
    // Create outer Result.Ok(inner)
    outer = Result.Ok(inner)
    
    // Extract outer
    outer ?
        | Result.Ok(inner_result) {
            // Don't try to pattern match or interpolate yet
            // Just see if we can extract the inner result
            io.println("Extracted inner Result")
            
            // Now try to extract from inner
            inner_result ?
                | Result.Ok(val) {
                    // Don't interpolate - just print a literal
                    io.println("Extracted value from inner")
                    
                    // Try to use the value in a condition
                    val == 42 ?
                        | true { io.println("Value is 42") }
                        | false { io.println("Value is not 42") }
                }
                | Result.Err(e) { io.println("Inner was Err") }
        }
        | Result.Err(e) { io.println("Outer was Err") }
    
    0
}