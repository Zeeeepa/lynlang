// LSP Feature Test File
// This file tests all major LSP features

{ Result, Option } = @std

// Test function for signature help and hover
divide = (a: f64, b: f64) Result<f64, StaticString> {
    if b == 0.0 {
        return Result.Err("Division by zero")
    }
    return Result.Ok(a / b)
}

// Test function with multiple parameters for signature help
calculate = (x: i32, y: i32, z: i32) i32 {
    return x + y * z
}

// Test pattern matching for hover type inference
test_pattern_matching = () i32 {
    result = divide(10.0, 2.0)

    result ?
        | Ok(val) {
            // Hover over 'val' should show: f64
            println("Result: {}", val)
        }
        | Err(msg) {
            // Hover over 'msg' should show: StaticString
            println("Error: {}", msg)
        }

    return 0
}

// Test variable type inference for inlay hints
test_inlay_hints = () i32 {
    // These variables should show inlay hints
    x = 42           // Should infer: i32
    y = 3.14         // Should infer: f64
    name = "Alice"   // Should infer: StaticString

    // Test function call type inference
    sum = calculate(1, 2, 3)  // Should infer: i32

    return 0
}

// Test code lens - should show "Run Test" button
test_code_lens_feature = () i32 {
    return 0
}

// Test workspace symbols and goto definition
greet = (name: StaticString) void {
    println("Hello, {}", name)
}

// Main function
main = () i32 {
    // Test signature help - type '(' and you should see parameters
    result = divide(10.0, 5.0)

    // Test rename - right-click on 'greet' and rename
    greet("World")

    return 0
}
