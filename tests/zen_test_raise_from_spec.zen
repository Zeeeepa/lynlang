// Test .raise() from LANGUAGE_SPEC.zen lines 205-211

{ io } = @std

Result<T, E>: Ok(T) | Err(E)

// Simple function that returns Result
divide = (a: f64, b: f64) Result<f64, String> {
    b == 0.0 ?
        | true { return Err("Division by zero") }
        | false { return Ok(a / b) }
}

// Function using .raise() for error propagation
calculate = () Result<f64, String> {
    // This should propagate error if divide returns Err
    result = divide(10.0, 0.0).raise()
    return Ok(result * 2.0)
}

main = () void {
    output = calculate()
    output ?
        | Ok(v) { io.println("Result: ${v}") }
        | Err(e) { io.println("Error: ${e}") }
}