// Debug Result<Result<i32, string>, string> issue
{ io, Result } = @std

test_inline = () void {
    io.println("Inline construction:")
    nested = Result.Ok(Result.Ok(42))
    nested ?
        | Result.Ok(inner) {
            inner ?
                | Result.Ok(v) { io.println("  Value: ${v}") }
                | Result.Err(e) { io.println("  Error: ${e}") }
        }
        | Result.Err(e) { io.println("  Error: ${e}") }
}

test_with_variable = () void {
    io.println("Via variable:")
    inner_result = Result.Ok(42)
    nested = Result.Ok(inner_result)
    nested ?
        | Result.Ok(inner) {
            inner ?
                | Result.Ok(v) { io.println("  Value: ${v}") }
                | Result.Err(e) { io.println("  Error: ${e}") }
        }
        | Result.Err(e) { io.println("  Error: ${e}") }
}

test_from_function = () void {
    io.println("From function:")
    make_inner = () Result<i32, string> { Result.Ok(42) }
    nested = Result.Ok(make_inner())
    nested ?
        | Result.Ok(inner) {
            inner ?
                | Result.Ok(v) { io.println("  Value: ${v}") }
                | Result.Err(e) { io.println("  Error: ${e}") }
        }
        | Result.Err(e) { io.println("  Error: ${e}") }
}

main = () i32 {
    io.println("=== Debugging Result<Result<>> ===")
    test_inline()
    test_with_variable()
    test_from_function()
    0
}