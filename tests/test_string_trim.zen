// Test string.trim() method
{ io , get_default_allocator} = @std

main = () i32 {
    alloc = get_default_allocator()
    io.println("Testing string.trim() method...")
    
    // Test 1: Basic string with leading and trailing spaces
    basic = "  hello world  "
    trimmed1 = basic.trim()
    io.println("Test 1: '${basic}' -> '${trimmed1}'")
    
    // Test 2: String with tabs
    with_tabs = "\thello\tworld\t"
    trimmed2 = with_tabs.trim()
    io.println("Test 2: Tabs trimmed -> '${trimmed2}'")
    
    // Test 3: String with newlines
    with_newlines = "\nhello world\n"
    trimmed3 = with_newlines.trim()
    io.println("Test 3: Newlines trimmed -> '${trimmed3}'")
    
    // Test 4: String with mixed whitespace
    mixed = " \t\nhello world\n\t "
    trimmed4 = mixed.trim()
    io.println("Test 4: Mixed whitespace -> '${trimmed4}'")
    
    // Test 5: String with no whitespace
    no_ws = "hello"
    trimmed5 = no_ws.trim()
    io.println("Test 5: No whitespace -> '${trimmed5}'")
    
    // Test 6: Empty string
    empty = ""
    trimmed6 = empty.trim()
    io.println("Test 6: Empty string -> '${trimmed6}'")
    
    // Test 7: Only whitespace
    only_ws = "   \t\n   "
    trimmed7 = only_ws.trim()
    io.println("Test 7: Only whitespace -> '${trimmed7}'")
    
    // Test 8: String with carriage returns
    with_cr = "\rhello world\r"
    trimmed8 = with_cr.trim()
    io.println("Test 8: CR trimmed -> '${trimmed8}'")
    
    // Test 9: String with internal whitespace (should not be trimmed)
    internal = "  hello    world  "
    trimmed9 = internal.trim()
    io.println("Test 9: Internal spaces preserved -> '${trimmed9}'")
    
    // Test 10: Single character with whitespace
    single = "  x  "
    trimmed10 = single.trim()
    io.println("Test 10: Single char -> '${trimmed10}'")
    
    // Test 11: String literal directly
    trimmed11 = "  direct literal  ".trim()
    io.println("Test 11: Direct literal -> '${trimmed11}'")
    
    io.println("\nâœ“ All string.trim() tests completed successfully!")
    0
}

result = main()