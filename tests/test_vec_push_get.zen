// Debug test for nested generic with value use
{ io, Result } = @std

main = () i32 {
    // Create inner Result.Ok(42)
    inner = Result.Ok(42)
    
    // Create outer Result.Ok(inner)
    outer = Result.Ok(inner)
    
    // Extract outer and then inner
    outer ?
        | Result.Ok(inner_result) {
            io.println("Extracted inner Result from outer")
            // Now try to match on inner_result
            inner_result ?
                | Result.Ok(val) {
                    // First print without interpolation
                    io.println("Got inner value")
                    // Now try with interpolation
                    io.println("Value is: ${val}")
                }
                | Result.Err(e) { io.println("Inner was Err") }
        }
        | Result.Err(e) { io.println("Outer was Err") }
    
    0
}