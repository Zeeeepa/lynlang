// Test .raise() with error case
{ io, Result , get_default_allocator} = @std

maybe_fail = (fail: bool) Result<i32, StaticString> {
    fail ? {
        return Result.Err("Failed as expected")
    }
    return Result.Ok(42)
}

process_value = () Result<i32, StaticString> {
    // This should propagate the error
    value = maybe_fail(true).raise()
    io.println("This should not print: ${value}")
    return Result.Ok(value)
}

main = () i32 {
    alloc = get_default_allocator()
    result = process_value()
    result ?
        | Result.Ok(val) { io.println("Got Ok: ${val}") }
        | Result.Err(e) { io.println("Got Error: ${e}") }
    
    return 0
}