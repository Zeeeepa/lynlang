// Debug test for raise type inference
{ io, Result } = @std

main = () i32 {
    // Test with closure definition
    divide = (a: f64, b: f64) Result<f64, string> {
        b == 0.0 ?
            | true { return Result.Err("Division by zero") }
            | false { return Result.Ok(a / b) }
    }
    
    result = divide(10.0, 2.0)
    // This should work - result has known type Result<f64, string>
    result ?
        | Ok(v) { io.print_float(v); io.println("") }
        | Err(e) { io.println(e) }
    
    // Now test with raise
    val = divide(10.0, 2.0).raise()
    io.print("Val type should be f64: ")
    io.print_float(val)
    io.println("")
    
    // This should work - val should be f64
    val == 5.0 ?
        | true { io.println("Success: val == 5.0") }
        | false { io.println("Failed: val != 5.0") }
    
    return 0
}