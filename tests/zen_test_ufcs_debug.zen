// UFCS test with debug output
Rectangle: {
    width: f64,
    height: f64,
}

// Define function with receiver as first param
area = (rect: Rectangle) f64   {
    rect.width * rect.height
}

perimeter = (rect: Rectangle) f64   {
    2.0 * (rect.width + rect.height)
}

main = () i32   {
    my_rect := Rectangle{ width: 10.0, height: 5.0 }
    
    // Test direct function calls first
    a1 := area(my_rect)
    p1 := perimeter(my_rect)
    
    // Test UFCS - call function as method
    a2 := my_rect.area()
    p2 := my_rect.perimeter()
    
    // Convert to integers for comparison
    a1_int := cast<i32>(a1)
    p1_int := cast<i32>(p1)
    a2_int := cast<i32>(a2)
    p2_int := cast<i32>(p2)
    
    // Check if direct calls work (should be 50 and 30)
    direct_sum := a1_int + p1_int  // Should be 80
    
    // Check if UFCS calls work (should also be 50 and 30)
    ufcs_sum := a2_int + p2_int    // Should be 80
    
    // Return difference between sums (should be 0 if both work)
    return ufcs_sum - direct_sum
}