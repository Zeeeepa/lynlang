// Test enum variant access according to LANGUAGE_SPEC.zen

{ io } = @std

// Simple enum from LANGUAGE_SPEC line 165
Shape: Circle | Rectangle

// Enum with payloads from LANGUAGE_SPEC line 173
GameEntity: Player | Enemy | Powerup

main = () void {
    // Should be able to create enum variants using dot syntax
    shape1 = Shape.Circle
    shape2 = Shape.Rectangle
    
    // Pattern matching on enum variants
    shape1 ?
        | Circle { io.println("It's a circle!") }
        | Rectangle { io.println("It's a rectangle!") }
    
    // Game entities
    entity1 = GameEntity.Player
    entity2 = GameEntity.Enemy
    
    entity1 ?
        | Player { io.println("Found a player") }
        | Enemy { io.println("Found an enemy") }
        | Powerup { io.println("Found a powerup") }
}