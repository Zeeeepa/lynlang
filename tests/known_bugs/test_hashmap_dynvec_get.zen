// Test HashMap containing DynVec and calling get on it
{ io, get_default_allocator, HashMap, DynVec } = @std

main = () i32 {
    alloc = get_default_allocator()
    
    // HashMap with DynVec<String> values
    map = HashMap<i32, DynVec<String>>(alloc)
    
    // Create a DynVec
    strings = DynVec<String>(alloc)
    strings.push("hello")
    strings.push("world")
    
    // Store in map
    map.insert(1, strings)
    
    // Get from map
    list = map.get(1)
    
    list ?
        | Some(vec_ref) {
            // Try to get first element from DynVec
            first = vec_ref.get(0)
            first ?
                | Some(s) { io.println(s) }
                | None { io.println("Empty vec") }
        }
        | None { io.println("Key not found") }
    
    return 0
}