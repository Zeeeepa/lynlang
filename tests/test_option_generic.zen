// Test Option<T> generic type tracking
{ io } = @std

main = () i32 {
    // Test Option<i32>
    x: Option<i32> = Some(42)
    
    // Pattern matching on Option<i32>
    result = x ? 
        | Some(val) => val
        | None => 0
    
    io.println("Some(42) extracted: ${result}")
    
    // Test Option<i64>
    y: Option<i64> = Some(9999999999)
    
    result2 = y ? 
        | Some(val) => val
        | None => 0
    
    io.println("Some(9999999999) extracted: ${result2}")
    
    // Test None variant
    z: Option<i32> = None
    result3 = z ? 
        | Some(val) => val 
        | None => -1
    
    io.println("None extracted: ${result3}")
    
    0
}