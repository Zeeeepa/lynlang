// Test Result pattern matching in expression context
{io, Option, Result, get_default_allocator} = @std

// Import Result and Option from stdlib
{io, Option, Result, get_default_allocator} = @std

// Function with pattern matching as expression
test_pattern = () Result<i32, string> {
    maybe: Option<i32> = Option.Some(42)
    
    // Pattern matching in expression context (not statement)
    maybe ?
        | .Some(v) { return Result.Ok(v) }
        | .None { return Result.Err("no value") }
}

main = () void {
    alloc = get_default_allocator()
    io.println("Testing pattern matching")
    result = test_pattern()
    
    result ?
        | .Ok(v) { io.println("Got value") }
        | .Err(e) { io.println("Got error") }
}