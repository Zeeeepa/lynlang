{ io } = @std

main = () i32 {
    // Create array
    arr: Array<i32> = Array<i32>.new(10, 0)
    
    // Push some values
    arr.push(100)
    arr.push(200)
    arr.push(300)
    
    // Check length
    len1 = arr.len()
    io.println("Length after pushes: ${len1}")
    
    // Get values
    v0 = arr.get(0)
    v1 = arr.get(1)
    v2 = arr.get(2)
    io.println("Values: ${v0}, ${v1}, ${v2}")
    
    // Pop and check
    p1 = arr.pop()
    p1 ?
        | Option.Some(val) { io.println("Popped: ${val}") }
        | Option.None { io.println("Empty!") }
    
    len2 = arr.len()
    io.println("Length after pop: ${len2}")
    
    // Pop again
    p2 = arr.pop()
    p2 ?
        | Option.Some(val) { io.println("Popped: ${val}") }
        | Option.None { io.println("Empty!") }
    
    len3 = arr.len()
    io.println("Length after 2nd pop: ${len3}")
    
    // Pop last one
    p3 = arr.pop()
    p3 ?
        | Option.Some(val) { io.println("Popped: ${val}") }
        | Option.None { io.println("Empty!") }
    
    len4 = arr.len()
    io.println("Length after 3rd pop: ${len4}")
    
    // Pop from empty
    p4 = arr.pop()
    p4 ?
        | Option.Some(val) { io.println("Unexpected: ${val}") }
        | Option.None { io.println("Correctly empty!") }
    
    return 0
}