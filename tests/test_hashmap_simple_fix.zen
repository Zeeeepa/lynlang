// Test simple HashMap get with Option pattern matching
{ io, HashMap, Option, get_default_allocator } = @std

main = () i32 {
    alloc = get_default_allocator()
    map ::= HashMap<i32, i32>(alloc)
    
    // Simple functions
    hash_fn = (x: i32) i64 { 16 as i64 }
    eq_fn = (a: i32, b: i32) i64 { a == b ? | true { 1 as i64 } | false { 0 as i64 } }
    
    // Insert and get
    map.insert(5, 42, hash_fn, eq_fn)
    
    result ::= map.get(5, hash_fn, eq_fn)
    
    // Test direct Option.Some construction
    test_some ::= Option.Some(42)
    test_some ?
        | Option.Some(v) { io.println("Direct Option.Some works: ${v}") }
        | Option.None { io.println("Direct Option failed") }
    
    // Test the result from HashMap
    result ?
        | Option.Some(v) { 
            io.println("HashMap get returned: ${v}") 
            return 0
        }
        | Option.None { 
            io.println("HashMap get returned None") 
            return 0
        }
}