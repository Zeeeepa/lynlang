// Test improved raise() functionality 
{ io, Result , get_default_allocator} = @std

main = () void {
    alloc = get_default_allocator()
    io.println("Testing improved raise() expression")
    
    // Direct raise on Result.Ok
    val1 = Result.Ok(42).raise()
    io.println("Direct raise: ${val1}")
    
    // Store in variable then raise
    result = Result.Ok(100)
    val2 = result.raise()
    io.println("Variable raise: ${val2}")
    
    // Raise with expression
    sum = 5 + 3
    val3 = Result.Ok(sum).raise()
    io.println("Expression raise: ${val3}")
    
    // Chain of operations
    process = () { Result.Ok(777) }
    val4 = process().raise()
    io.println("Function return raise: ${val4}")
}