// Test for step ranges from LANGUAGE_SPEC.zen (lines 436-439)

{ io } = @std

main = () void {
    io.println("=== STEP RANGES TEST ===")
    io.println("")
    io.println("From LANGUAGE_SPEC.zen lines 436-439:")
    io.println("")
    
    // Basic range iteration (line 432-434)
    io.println("1. Basic range (0..5):")
    (0..5).loop((i) {
        io.println("   ${i}")
    })
    io.println("")
    
    // Step range - every 10th number (lines 437-439)
    io.println("2. Step range (0..100).step(10):")
    (0..100).step(10).loop((i) {
        io.println("   ${i}")  // 0, 10, 20, 30, ..., 90
    })
    io.println("")
    
    // Step range with different step sizes
    io.println("3. Step range (0..20).step(3):")
    (0..20).step(3).loop((i) {
        io.println("   ${i}")  // 0, 3, 6, 9, 12, 15, 18
    })
    io.println("")
    
    // Step range starting from non-zero
    io.println("4. Step range (5..25).step(4):")
    (5..25).step(4).loop((i) {
        io.println("   ${i}")  // 5, 9, 13, 17, 21
    })
    io.println("")
    
    // Large step
    io.println("5. Step range (0..1000).step(250):")
    (0..1000).step(250).loop((i) {
        io.println("   ${i}")  // 0, 250, 500, 750
    })
    io.println("")
    
    // Step of 1 should be same as no step
    io.println("6. Step range (0..5).step(1) - same as (0..5):")
    (0..5).step(1).loop((i) {
        io.println("   ${i}")  // 0, 1, 2, 3, 4
    })
    io.println("")
    
    // Use step range in computation
    io.println("7. Sum of multiples of 5 from 0 to 50:")
    sum ::= 0
    (0..51).step(5).loop((i) {
        sum = sum + i
    })
    io.println("   Sum = ${sum}")  // 0 + 5 + 10 + ... + 50 = 275
    io.println("")
    
    // Negative ranges with step
    io.println("8. Reverse range (20..0).step(-2):")
    (20..0).step(-2).loop((i) {
        io.println("   ${i}")  // 20, 18, 16, ..., 2
    })
    io.println("")
    
    io.println("✓ Step ranges working as per LANGUAGE_SPEC.zen")
    io.println("✓ (start..end).step(n) iterates with increments of n")
}