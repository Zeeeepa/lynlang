{ io, Array } = @std

main = () i32 {
    // Create an array with capacity 10, default value 0
    arr: Array<i32> = Array.new(10, 0)
    
    // Test push method
    arr.push(5)
    arr.push(10)
    arr.push(15)
    
    // Test len method
    len = arr.len()
    io.println("Length after 3 pushes: ${len}")
    
    // Debug: let's see what's at indices
    io.println("Debug - Index 3: ${arr.get(3)}")
    
    // Test get method
    val0 = arr.get(0)
    val1 = arr.get(1)
    val2 = arr.get(2)
    io.println("Element at index 0: ${val0}")
    io.println("Element at index 1: ${val1}")
    io.println("Element at index 2: ${val2}")
    
    // Test set method
    arr.set(1, 20)
    val1_new = arr.get(1)
    io.println("After setting index 1 to 20: ${val1_new}")
    
    // Test pop method
    result = arr.pop()
    result ?
        | Option.Some(val) { io.println("Popped value: ${val}") }
        | Option.None { io.println("Array was empty") }
    
    len2 = arr.len()
    io.println("Length after pop: ${len2}")
    
    // Pop remaining elements
    arr.pop()
    arr.pop()
    
    // Try to pop from empty array
    empty_result = arr.pop()
    empty_result ?
        | Option.Some(val) { io.println("Unexpectedly got: ${val}") }
        | Option.None { io.println("Correctly got None from empty array") }
    
    return 0
}