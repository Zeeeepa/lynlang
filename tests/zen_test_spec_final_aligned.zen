// Final test suite aligned with LANGUAGE_SPEC.zen
// Tests the core implemented features

{ io } = @std

main = () void {
    io.println("=== Zen Language Spec Test ===")
    io.println("")
    
    // Test 1: Variable Declarations (LANGUAGE_SPEC.zen lines 298-306)
    io.println("1. Variable Declarations:")
    
    // Forward declaration with assignment
    x: i32
    x = 10
    io.println("  Forward declared x = ${x}")
    
    // Immutable 
    y = 20
    z: i32 = 30
    io.println("  Immutable y = ${y}, z = ${z}")
    
    // Mutable
    w:: i32
    w = 40
    w = 45
    io.println("  Mutable w = ${w}")
    
    v ::= 50
    v = 55
    u:: i32 = 60
    u = 65
    io.println("  Mutable v = ${v}, u = ${u}")
    io.println("")
    
    // Test 2: Pattern Matching (lines 352-361)
    io.println("2. Pattern Matching:")
    is_ready = true
    is_ready ? {
        io.println("  System is ready")
    }
    
    has_data = false
    has_data ?
        | true { io.println("  Processing data") }
        | false { io.println("  No data to process") }
    io.println("")
    
    // Test 3: Loops (lines 432-460)
    io.println("3. Loops and Ranges:")
    io.print("  Range (0..5): ")
    (0..5).loop((i) {
        io.print("${i} ")
    })
    io.println("")
    
    io.print("  Loop with break: ")
    counter ::= 0
    loop {
        counter = counter + 1
        io.print("${counter} ")
        counter >= 3 ?
            | true { break }
            | false { }
    }
    io.println("")
    io.println("")
    
    // Test 4: Defer (line 217+)
    io.println("4. Defer:")
    @this.defer(io.println("  Deferred cleanup executed"))
    io.println("  Main work before defer")
    io.println("")
    
    // Test 5: String Interpolation
    io.println("5. String Interpolation:")
    name = "Zen"
    version = 1.0
    io.println("  Language: ${name} v${version}")
    
    a = 10
    b = 20
    io.println("  ${a} + ${b} = ${a + b}")
    io.println("")
    
    io.println("=== All Tests Complete ===")
}