// Test enum literals from LANGUAGE_SPEC.zen

{ io } = @std

// Define Option type according to spec
Option<T>: Some(T) | None

// Define Result type according to spec
Result<T, E>: Ok(T) | Err(E)

main = () void {
    // Test Option with enum literals
    maybe_value = Some(42)
    maybe_value ?
        | Some(v) { io.print("Got value: ") }
        | None { io.print("No value") }
    
    // Test with None
    no_value = None
    no_value ?
        | Some(v) { io.print("Unexpected value") }
        | None { io.print("Correctly None") }
    
    // Test Result type
    success = Ok(100)
    success ?
        | Ok(v) { io.print("Success with value") }
        | Err(e) { io.print("Error occurred") }
    
    // Test with error
    failure = Err("Something went wrong")
    failure ?
        | Ok(v) { io.print("Unexpected success") }
        | Err(e) { io.print("Got error") }
}