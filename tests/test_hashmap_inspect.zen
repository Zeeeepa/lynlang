// Test to inspect HashMap internals
{ io, HashMap, Option , get_default_allocator } = @std

main = () i32 {
    alloc = get_default_allocator()
    // Create HashMap<i32, i32> 
    map ::= HashMap<i32, i32>(alloc)
    
    // Simple hash function for i32
    hash_fn = (x: i32) i64 {
        return 16 as i64  // Force to bucket 0 for debugging
    }
    
    // Simple equality function for i32
    eq_fn = (a: i32, b: i32) i64 {
        a == b ?
            | true { return 1 as i64 }
            | false { return 0 as i64 }
    }
    
    // Insert a value we can identify
    io.println("Inserting: 5 -> 12345")
    map.insert(5, 12345, hash_fn, eq_fn)
    
    // Try to retrieve it
    result ::= map.get(5, hash_fn, eq_fn)
    result ?
        | Some(value) { 
            io.println("Got value: ${value}")
            value == 12345 ?
                | true { io.println("SUCCESS!") }
                | false { io.println("FAIL: Expected 12345") }
        }
        | Option.None { io.println("FAIL: Not found") }
    
    return 0
}