// Debug test for type issue with nested generics
{ io, Result } = @std

main = () void {
    get_double_nested = () Result<Result<i32, string>, string> {
        Result.Ok(Result.Ok(100))
    }
    
    outer = get_double_nested()
    inner = outer.raise()
    value = inner.raise()
    
    io.println("Value: ${value}")
    
    // This is where the test fails - pattern matching on value
    value == 100 ?
        | true { io.println("Equal to 100") }
        | false { io.println("Not equal to 100") }
}