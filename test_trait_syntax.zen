// Test the new .implements() and .requires() syntax

// Define a trait (behavior)
Geometric: behavior {
    area: (self: Circle) f64,
    perimeter: (self: Circle) f64,
}

// Simple struct
Circle: {
    center_x: f64,
    center_y: f64,
    radius: f64,
}

// Implement trait for type using .implements()
Circle.implements(Geometric, {
    area = (self: Circle) f64 {
        pi = 3.14159
        return pi * self.radius * self.radius
    },
    perimeter = (self: Circle) f64 {
        pi = 3.14159
        return 2.0 * pi * self.radius
    },
})

// Enum type
Shape: Circle | Rectangle

// Enforce all Shape variants must implement Geometric
Shape.requires(Geometric)

main = () void {
    c := Circle { center_x: 0.0, center_y: 0.0, radius: 5.0 }
    area := c.area()
    // io.println("Circle area: ${area}")
}