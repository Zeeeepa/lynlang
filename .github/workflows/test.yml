name: Test Suite

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
      continue-on-error: true
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
      continue-on-error: true
    
    - name: Build Rust compiler
      run: cargo build --release
    
    - name: Run Rust tests
      run: cargo test --verbose
    
    - name: Test examples
      run: |
        echo "Testing Zen examples..."
        ./target/release/zen examples/01_hello_world.zen
        ./target/release/zen examples/01_basics_working.zen
    
    - name: Check import syntax compliance
      run: |
        echo "Checking for incorrect comptime imports..."
        if grep -r "comptime.*{.*@std" --include="*.zen" . 2>/dev/null | grep -v "^Binary"; then
          echo "Found incorrect comptime import usage"
          exit 1
        else
          echo "✓ No incorrect comptime imports found"
        fi
    
    - name: Run comprehensive test suite
      run: |
        chmod +x tests/test_runner.sh
        ./tests/test_runner.sh
    
    - name: Test bootstrap process
      run: |
        chmod +x bootstrap.sh
        ./bootstrap.sh
        
  self-hosted-test:
    name: Self-Hosted Compiler Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Build Rust compiler
      run: cargo build --release
    
    - name: Verify self-hosted modules
      run: |
        echo "Verifying self-hosted compiler modules..."
        test -f compiler/lexer.zen
        test -f compiler/parser.zen
        test -f compiler/c_backend.zen
        test -f tools/zen-compile.zen
        test -f lsp/server.zen
        echo "✓ All self-hosted modules present"
    
    - name: Verify pure Zen stdlib
      run: |
        echo "Verifying pure Zen standard library..."
        test -f stdlib/zen/core.zen
        test -f stdlib/zen/io.zen
        test -f stdlib/zen/string.zen
        echo "✓ Core stdlib modules in pure Zen"
    
    - name: Test LSP server module
      run: |
        echo "Checking LSP server implementation..."
        grep -q "Language Server Protocol" lsp/server.zen
        echo "✓ LSP server module verified"
    
    - name: Summary
      run: |
        echo "================================================================"
        echo "Zen Language CI Test Summary"
        echo "================================================================"
        echo "✓ Rust compiler builds successfully"
        echo "✓ All tests pass"
        echo "✓ Examples compile and run"
        echo "✓ Import syntax is correct (no comptime wrapping)"
        echo "✓ Self-hosted compiler modules present"
        echo "✓ Pure Zen stdlib implemented"
        echo "✓ LSP server available"
        echo "✓ Bootstrap infrastructure ready"
        echo "================================================================"