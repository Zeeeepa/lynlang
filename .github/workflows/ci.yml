name: Zen Language CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always
  LLVM_SYS_181_PREFIX: /usr/lib/llvm-18

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Install LLVM 18
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-18 main"
        sudo apt-get update
        sudo apt-get install -y llvm-18 llvm-18-dev llvm-18-runtime clang-18 lld-18
        echo "/usr/lib/llvm-18/bin" >> $GITHUB_PATH
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build Rust compiler
      run: cargo build --release --verbose
    
    - name: Run Rust tests
      run: cargo test --verbose
    
    - name: Check code formatting
      run: cargo fmt -- --check
      continue-on-error: true
    
    - name: Run Clippy lints
      run: cargo clippy -- -D warnings
      continue-on-error: true
    
    - name: Test hello world example
      run: |
        if [ -f ./target/release/zen ]; then
          ./target/release/zen examples/01_hello_world.zen || echo "Hello world test failed"
        fi
    
    - name: Run integration tests
      run: |
        if [ -f test_integration.sh ]; then
          chmod +x test_integration.sh
          ./test_integration.sh
        else
          echo "Integration test script not found, skipping..."
        fi
    
    - name: Test stdlib syntax
      run: |
        echo "Checking stdlib import syntax..."
        ! grep -r "^comptime {" stdlib/ --include="*.zen" | grep "@std"
    
    - name: Verify self-hosted components
      run: |
        echo "Verifying self-hosted compiler components..."
        test -f compiler/lexer.zen
        test -f compiler/parser.zen
        test -f compiler/codegen.zen
        test -f tools/zen-compile.zen
        test -f lsp/server.zen
        test -f tools/zen-check.zen
    
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check for TODO comments
      run: |
        echo "Checking for TODO comments..."
        grep -r "TODO\|FIXME\|XXX" . --include="*.zen" --include="*.rs" || true
    
    - name: Check file permissions
      run: |
        echo "Checking executable permissions..."
        [ -f test_integration.sh ] && chmod +x test_integration.sh || true
        [ -f run_tests.sh ] && chmod +x run_tests.sh || true
    
    - name: Validate markdown
      uses: DavidAnson/markdownlint-cli2-action@v9
      with:
        globs: '**/*.md'
      continue-on-error: true