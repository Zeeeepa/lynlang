// Zen Standard Library - IO Module
// Provides input/output operations

// Print to stdout
print = (msg: string) void {
    @compiler.print(msg)
}

// Print with newline
println = (msg: string) void {
    @compiler.println(msg)
}

// Print to stderr
eprint = (msg: string) void {
    @compiler.eprint(msg)
}

// Print to stderr with newline
eprintln = (msg: string) void {
    @compiler.eprintln(msg)
}

// Read line from stdin
read_line = () string {
    return @compiler.read_line()
}

// File operations
File: {
    handle: RawPtr<void>,
    path: string,
    
    open: (path: string) Result<File, string>,
    read_all: (self) Result<string, string>,
    write: (self, data: string) Result<void, string>,
    close: (self) void,
}

// Module exports
module.exports = {
    print: print,
    println: println,
    eprint: eprint,
    eprintln: eprintln,
    read_line: read_line,
    File: File,
}